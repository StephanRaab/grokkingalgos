using System;

namespace binarySearch
{
    class Program
    {
        static void Main(string[] args)
        {
            Random rand = new Random();

            System.Console.WriteLine("Welcome. Please pick a number between 1 and 1000");
            int userNum = Convert.ToInt32(System.Console.ReadLine());
            
           var numbers = new[] {819,840,154,506,449,183,100,302,75,945,321,1,978,662,541,85,756,284,485,181,696,299,935,54,207,852,256,301,544,674,601,522,766,109,911,143,901,679,831,535,187,398,518,263,564,981,577,568,52,128,536,149,724,949,176,811,561,906,905,507,967,152,516,497,290,882,953,603,718,974,567,463,754,566,609,512,904,965,373,750,610,510,312,95,127,809,315,908,717,214,20,606,157,757,799,635,619,174,759,41,955,631,554,189,943,565,286,726,737,121,664,72,660,670,915,822,626,325,677,28,693,389,235,234,747,810,328,7,288,411,786,557,795,655,99,45,76,785,692,287,762,940,150,944,918,371,3,292,490,667,425,410,763,355,118,232,847,634,927,524,997,892,24,271,55,742,993,690,178,543,484,983,196,96,104,537,441,422,401,350,133,589,838,217,31,264,578,467,30,153,804,963,120,902,548,729,854,982,617,806,722,119,421,725,173,418,266,2,180,333,457,367,77,597,200,23,453,297,656,435,338,496,433,893,340,920,71,231,140,139,790,382,448,166,461,941,84,801,907,462,740,812,358,444,576,63,349,821,633,66,772,313,332,681,802,38,27,225,769,62,372,990,885,641,572,936,447,487,789,716,124,850,636,86,455,652,348,362,702,671,992,364,773,195,261,438,615,89,222,820,987,645,581,569,689,42,427,560,79,972,249,925,238,898,499,394,416,939,272,163,131,239,191,748,255,863,18,836,170,436,161,330,456,579,549,35,767,832,910,969,550,354,9,502,113,81,618,186,663,929,233,887,111,611,521,314,695,828,999,474,770,224,755,912,957,760,520,320,78,488,546,527,296,229,291,805,446,659,165,393,803,956,420,437,319,880,592,845,745,98,65,466,519,504,22,947,70,791,274,87,40,43,505,868,260,135,975,761,277,304,807,824,948,875,861,44,668,503,938,61,862,704,777,370,741,148,794,517,685,426,245,688,529,644,184,835,977,917,213,872,193,746,827,147,779,545,294,400,495,489,620,916,954,930,334,486,730,258,39,607,406,282,612,654,94,985,531,686,844,413,988,630,353,515,409,158,590,275,951,584,202,412,528,661,408,105,469,682,390,781,573,440,707,342,602,74,964,182,316,402,345,57,212,648,59,335,574,616,542,501,5,672,69,538,471,134,58,813,735,494,556,728,33,480,752,252,385,101,443,130,145,650,464,283,142,934,376,841,25,361,575,653,381,454,329,254,144,472,190,625,253,10,738,476,787,684,598,894,138,4,322,995,192,439,683,164,624,492,585,780,117,209,533,678,246,593,932,870,285,307,775,758,317,211,82,243,878,67,928,103,712,837,477,539,614,697,242,279,647,727,468,391,470,889,830,431,657,857,344,278,871,498,784,774,691,966,383,146,324,879,270,442,642,796,108,250,855,47,479,815,933,771,723,419,513,629,481,587,622,570,926,856,430,731,687,825,460,903,900,473,599,172,623,405,776,424,994,240,16,375,68,90,155,185,399,711,547,197,247,179,308,248,959,739,265,869,886,665,508,710,553,360,552,414,244,337,64,563,60,465,699,107,778,979,913,378,808,227,323,194,475,765,123,853,151,343,188,357,721,744,392,732,946,289,605,403,873,666,559,169,816,251,562,377,482,298,428,429,6,15,136,782,216,387,423,514,276,675,976,604,218,395,434,407,397,230,80,586,452,210,268,226,309,632,339,743,221,895,829,199,703,208,303,919,591,21,823,171,640,551,669,141,621,896,451,509,14,627,834,37,890,638,950,897,305,532,608,26,705,526,91,706,859,866,478,991,571,318,523,126,960,651,876,534,646,273,51,198,649,341,715,92,924,525,984,129,450,351,580,793,998,942,417,749,459,921,582,11,46,931,817,530,219,331,596,971,595,639,206,511,137,970,432,1000,56,237,280,205,713,326,980,160,106,116,860,694,352,843,168,415,122,88,958,73,826,734,719,709,36,97,13,952,989,708,34,733,262,986,751,306,851,175,257,356,236,700,673,374,346,764,588,159,555,366,223,132,241,628,102,365,996,201,783,12,922,295,311,800,968,83,269,818,347,676,379,380,891,327,215,369,267,680,768,877,848,336,53,814,937,874,797,888,49,600,396,368,259,162,701,798,491,29,359,384,881,883,17,493,228,363,281,833,973,698,909,203,112,714,923,839,864,865,115,849,220,658,404,643,458,177,540,167,962,388,720,48,19,156,204,500,842,300,50,637,8,899,125,386,961,445,858,583,32,914,788,93,483,558,310,293,594,867,792,846,613,884,736,114,753,110};
           Array.Sort(numbers);

           var linearStart = DateTime.Now;
           var linear = LinearSearch(numbers, userNum);
           var linearStop = DateTime.Now;
           System.Console.WriteLine($"Linear: {linear} --> {linearStop - linearStart}");

           var binStart = DateTime.Now;
           var binary = BinarySearch(numbers, userNum);
           var binEnd = DateTime.Now;

           System.Console.WriteLine($"Binary: {binary} --> {binEnd - binStart}");
        }

        private static int BinarySearch(int[] array, int item){
            int start = 0;
            int stop = array.Length-1;
            
            while (start <= stop)
            {
                int middle = (start + stop) / 2;
                int guess = array[middle];

                if (guess == item){
                    return middle;
                } else if(guess > item){
                    stop = middle -1;
                } else if (guess < item){
                    start = middle +1;
                }
            }

            return -1;
        }

        private static int LinearSearch(int[] array, int item){
              for (int i = 0; i < array.Length; i++)
              {
                  if (array[i] == item){
                      return i;
                  }
              } 

              return -1;
           }
    }
}
